{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","setIsReversed","NONE","sortType","setSortType","myPreparedProducts","goods","visibleGoods","ALPHABET","sort","good1","good2","localeCompare","LENGTH","length","reverse","getReorderedGoods","isResetVisible","className","type","cn","onClick","map","product","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAqCE,IAAME,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASH,EAASM,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACMC,EA7BD,SACLC,EADK,GAGJ,IADCH,EACF,EADEA,SAAUH,EACZ,EADYA,WAENO,EAAY,YAAOD,GAEzB,OAAQH,GACN,KAAKP,EAASY,SACZD,EAAaE,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MACxD,MAEF,KAAKf,EAASiB,OACZN,EAAaE,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMI,OAASH,EAAMG,UAW7D,OAJId,GACFO,EAAaQ,UAGRR,EAMoBS,CACzBnB,EACA,CAAEM,WAAUH,eAERiB,GAAgC,IAAfjB,GAAwBG,IAAaP,EAASM,KAmBrE,OACE,sBAAKgB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UACEE,IACE,iBACA,CAAE,WAAYjB,IAAaP,EAASY,WAGxCa,QA5BwB,WAC9BjB,EAAYR,EAASY,WAmBjB,iCAaA,wBACEW,KAAK,SACLD,UACEE,IACE,oBACA,CAAE,WAAYjB,IAAaP,EAASiB,SAGxCQ,QArCsB,WAC5BjB,EAAYR,EAASiB,SA4BjB,4BAaA,wBACEM,KAAK,SACLD,UACEE,IACE,oBACA,CAAE,YAA2B,IAAfpB,IAGlBqB,QA9CmB,WACzBpB,GAAeD,IAqCX,qBAaCiB,GAEG,wBACEE,KAAK,SACLD,UAAU,4BACVG,QApDa,WACvBjB,EAAYR,EAASM,MACrBD,GAAc,IA+CN,sBAUN,6BACGI,EAAmBiB,KAAI,SAAAC,GAAO,OAC7B,oBAEE,UAAQ,OACRL,UAAU,UAHZ,SAKGK,GAJIA,YCvIjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.00bb44d5.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n      visibleGoods.sort((good1, good2) => good1.localeCompare(good2));\n      break;\n\n    case SortType.LENGTH:\n      visibleGoods.sort((good1, good2) => good1.length - good2.length);\n      break;\n\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const myPreparedProducts = getReorderedGoods(\n    goodsFromServer,\n    { sortType, isReversed },\n  );\n  const isResetVisible = isReversed === true || (sortType !== SortType.NONE);\n\n  const handleClickSortAlphabet = () => {\n    setSortType(SortType.ALPHABET);\n  };\n\n  const handleClickSortLength = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const handleClickReverce = () => {\n    setIsReversed(!isReversed);\n  };\n\n  const handleClickReset = () => {\n    setSortType(SortType.NONE);\n    setIsReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={\n            cn(\n              'button is-info',\n              { 'is-light': sortType !== SortType.ALPHABET },\n            )\n          }\n          onClick={handleClickSortAlphabet}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            cn(\n              'button is-success',\n              { 'is-light': sortType !== SortType.LENGTH },\n            )\n          }\n          onClick={handleClickSortLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            cn(\n              'button is-warning',\n              { 'is-light': isReversed !== true },\n            )\n          }\n          onClick={handleClickReverce}\n        >\n          Reverse\n        </button>\n\n        {isResetVisible\n          && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={handleClickReset}\n            >\n              Reset\n            </button>\n          )}\n      </div>\n\n      <ul>\n        {myPreparedProducts.map(product => (\n          <li\n            key={product}\n            data-cy=\"Good\"\n            className=\"product\"\n          >\n            {product}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}